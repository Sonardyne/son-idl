//Copyright 2024 Sonardyne

//Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated
//documentation files (the “Software”), to deal in the Software without restriction, including without limitation the
//rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to
//permit persons to whom the Software is furnished to do so, subject to the following conditions:

//The above copyright notice and this permission notice shall be included in all copies or substantial portions of the
//Software.

//THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE
//WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
//COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
//OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

syntax = "proto3";

import "sonardyne-public/idl/common/version.proto";
import "sonardyne-public/idl/configuration/configuration_envelope.proto";

package sonardyne.api;

service StateService{
  // Gets the api protocol version
  rpc GetVersion(sonardyne.api.pub.common.VersionRequest) returns (sonardyne.api.pub.common.VersionResponse);

  // Sets instrument configuration.  Returns the updated configuration, result, and timestamp
  rpc SetState(sonardyne.api.pub.configuration.ConfigurationEnvelope) returns (sonardyne.api.pub.configuration.ConfigurationEnvelope);

  // Gets instrument configuration.  The 'ConfigurationRequest' contains required instrument specific configuration type
  rpc GetState(sonardyne.api.pub.configuration.ConfigurationRequest) returns (sonardyne.api.pub.configuration.ConfigurationEnvelope);

  // A stream which publishes all state changes on the instrument.
  rpc StateStream(sonardyne.api.pub.configuration.ConfigurationRequest) returns (stream sonardyne.api.pub.configuration.ConfigurationEnvelope);
}
