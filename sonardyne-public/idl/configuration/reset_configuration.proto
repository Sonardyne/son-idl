// Copyright 2024 Sonardyne

// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the “Software”), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:

// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.

// THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.

syntax = "proto3";

import "sonardyne-public/idl/common/result.proto";
import "sonardyne-public/idl/common/uid.proto";

package sonardyne.api.pub.configuration;

message ResetType{
  enum ResetTypeEnum{
    UNKNOWN                = 0;
    SOFT_RESET             = 1; // See instrument manual for description
    HARD_RESET             = 2; // See instrument manual for description
  }

  ResetTypeEnum value = 1; // The type of reset to execute
  repeated ResetTypeEnum valid_values = 2; // The valid values for the reset type
}

// Set type of reset to execute
message ResetConfiguration{
  sonardyne.api.pub.common.Uid id         = 1; // Used to identify recipient instrument/module
  sonardyne.api.pub.common.Result result  = 2; // Populated by instrument when replying to a SetState indicating the success of the operation
  ResetType reset_type                    = 3; // Indicates the type of reset required
}