//Copyright 2024 Sonardyne

//Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated
//documentation files (the “Software”), to deal in the Software without restriction, including without limitation the
//rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to
//permit persons to whom the Software is furnished to do so, subject to the following conditions:

//The above copyright notice and this permission notice shall be included in all copies or substantial portions of the
//Software.

//THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE
//WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
//COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
//OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

syntax = "proto3";

package sonardyne.api.pub.common;

message BoundedDouble {
  double value = 1; // The value
  double min = 2; // The minimum value (read only)
  double max = 3; // The maximum value (read only)
}

message BoundedFloat {
  float value = 1; // The value
  float min = 2; // The minimum value (read only)
  float max = 3; // The maximum value (read only)
}

message BoundedInt32 {
  int32 value = 1; // The value
  int32 min = 2; // The minimum value (read only)
  int32 max = 3; // The maximum value (read only)
}

message BoundedInt64 {
  int64 value = 1; // The value
  int64 min = 2; // The minimum value (read only)
  int64 max = 3; // The maximum value (read only)
}

message BoundedUInt32 {
  uint32 value = 1; // The value
  uint32 min = 2; // The minimum value (read only)
  uint32 max = 3; // The maximum value (read only)
}

message BoundedUInt64 {
  uint64 value = 1; // The value
  uint64 min = 2; // The minimum value (read only)
  uint64 max = 3; // The maximum value (read only)
}

message SInt32Value {
  sint32 value = 1; // The value
  sint32 min = 2; // The minimum value (read only)
  sint32 max = 3; // The maximum value (read only)
}

message SInt64Value {
  sint64 value = 1; // The value
  sint64 min = 2; // The minimum value (read only)
  sint64 max = 3; // The maximum value (read only)
}

message Fixed32Value {
  fixed32 value = 1; // The value
  fixed32 min = 2; // The minimum value (read only)
  fixed32 max = 3; // The maximum value (read only)
}

message Fixed64Value {
  fixed64 value = 1; // The value
  fixed64 min = 2; // The minimum value (read only)
  fixed64 max = 3; // The maximum value (read only)
}

message SFixed32Value {
  sfixed32 value = 1; // The value
  sfixed32 min = 2; // The minimum value (read only)
  sfixed32 max = 3; // The maximum value (read only)
}

message SFixed64Value {
  sfixed64 value = 1; // The value
  sfixed64 min = 2; // The minimum value (read only)
  sfixed64 max = 3; // The maximum value (read only)
}